{
  "id": "https://raw.githubusercontent.com/t-anba/azure-resource-manager-schemas/t-anbaAzSDeploymentTemplate/schemas/2019-04-01/deploymentTemplate.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Template",
  "description": "An Azure deployment template",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "description": "JSON schema reference"
    },
    "apiProfile": {
      "type": "string",
      "enum": [
        "2017-03-09-profile",
        "2018-03-01-hybrid",
        "2018-06-01-profile"
      ],
      "description": "The apiProfile to use for all resources in the template."
    },
    "resources": {
      "type": "array",
      "description": "Collection of resources to be deployed",
      "items": {
        "oneOf": [
          {
            "allOf": [
              {
                "$ref": "#/definitions/resourceBase"
              },
              {
                "oneOf": [
                  {
                    "$ref": "https://raw.githubusercontent.com/t-anba/azure-resource-manager-schemas/t-anbaAzSDeploymentTemplate/schemas/2016-10-01/Microsoft.KeyVault.json"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "resourceBase": {
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceBase"
        },
        {
          "properties": {
            "tags": {
              "type": "object",
              "description": "Name-value pairs to add to the resource"
            },
            "blah": {
              "type": "string",
              "description": "blahblah"
            },
            "comments": {
              "type": "string"
            },
            "angela": {
              "type": "string"
            }
          }
        }
      ]
    },
    "definitions": {
      "ARMResourceBase": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the resource"
          },
          "type": {
            "type": "string",
            "description": "Resource type"
          },
          "condition": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/definitions/expression"
              }
            ],
            "description": "Condition of the resource"
          },
          "apiVersion": {
            "type": "string",
            "description": "API Version of the resource type, optional when apiProfile is used on the template"
          },
          "dependsOn": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Collection of resources this resource depends on"
          }
        },
        "required": [
          "name",
          "type"
        ]
      }
    },
    "expression": {
      "type": "string",
      "pattern": "^\\[(json|if|and|or|not|concat|parameters|variables|deployment|reference|resourceId|resourceGroup|subscription|list.*|base64|providers|copyIndex|padLeft|replace|toLower|toUpper|startsWith|endsWith|length|split|skip|take|contains|intersection|union|first|last|indexOf|lastIndexOf|add|sub|mul|div|mod|min|max|range|string|int|float|bool|trim|uri|uniqueString|substring|base64ToString|base64ToJson|uriComponentToString|uriComponent|dataUriToString|dataUri|array|createArray|coalesce|empty|less|lessOrEquals|greater|greaterOrEquals|equals|[\\w\\$]+\\.[\\w\\$]+)\\(.*\\).*\\]$",
      "description": "Deployment template expression. Expressions are enclosed in [] and must start with a function of json(), if(), and(), or(), not(), concat(), parameters(), variables(), deployment(), reference(), resourceId(), resourceGroup(), subscription(), list*(), base64(), providers(), copyIndex(), padLeft(), replace(), toLower(), toUpper(), length(), split(), skip(), take(), add(), sub(), mul(), div(), mod(), string(), int(), trim(), uri(), uniqueString(), substring(), empty(), contains(), intersection(), union(), first(), last(), indexOf(), lastIndexOf(), startsWith(), endsWith(), min(), max(), range(), base64ToString(), base64ToJson(), uriComponentToString(), uriComponent(), dataUriToString(), dataUri(), array(), createArray(), coalesce(), float(), bool(), less(), lessOrEquals(), greater(), greaterOrEquals(), equals()"
    },
    "numberOrExpression": {
      "oneOf": [
        {
          "type": "number"
        },
        {
          "$ref": "#/definitions/expression"
        }
      ]
    },
    "Iso8601Duration": {
      "type": "string",
      "pattern": "^P(\\d+Y)?(\\d+M)?(\\d+D)?(T(((\\d+H)(\\d+M)?(\\d+(\\.\\d{1,2})?S)?)|((\\d+M)(\\d+(\\.\\d{1,2})?S)?)|((\\d+(\\.\\d{1,2})?S))))?$"
    },
    "UTC": {
      "type": "string",
      "pattern": "^\\d{4}(-(0[1-9]|1[0-2])(-([012]\\d|3[01])(T((([01]\\d|2[0123]):[0-5]\\d)|(24:00))(:(([0-5]\\d)|60)(\\.\\d{1,}){0,1}){0,1}){0,1}((Z)|([+-]((([01]\\d|2[0123]):[0-5]\\d)|(24:00)))){0,1}){0,1}){0,1}$"
    },
    "apiVersion": {
      "type": "string",
      "pattern": "(^((\\d\\d\\d\\d-\\d\\d-\\d\\d)|([0-9]+(\\.[0-9]+)?))(-[a-zA-Z][a-zA-Z0-9]*)?$)",
      "description": "API version of the resource type"
    }
  }
}